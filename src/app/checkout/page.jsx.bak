"use client"

import { useState, useEffect } from 'react'
import { useRouter } from 'next/navigation'
import Link from 'next/link'
import Image from 'next/image'
import { paymentOptions } from '../../lib/products'

export default function CheckoutPage() {
  const router = useRouter();
  const [cartItems, setCartItems] = useState([]);
  const [totalAmount, setTotalAmount] = useState(0);
  const [selectedPayment, setSelectedPayment] = useState(null);
  const [orderDetails, setOrderDetails] = useState({
    fullName: '',
    phone: '',
    email: '',
    notes: ''
  });
  const [isSubmitting, setIsSubmitting] = useState(false);
  const [isComplete, setIsComplete] = useState(false);
  
  // פונקציה לטעינת פריטי העגלה
  useEffect(() => {
    try {
      // קריאה מה-localStorage
      const savedItems = localStorage.getItem('cartItems');
      const parsedItems = savedItems ? JSON.parse(savedItems) : [];
      
      if (parsedItems.length === 0) {
        // אם העגלה ריקה, נחזור לעמוד העגלה
        router.push('/cart');
        return;
      }
      
      setCartItems(parsedItems);
      
      // חישוב סכום כולל
      const total = parsedItems.reduce((sum, item) => {
        return sum + (item.price * item.quantity);
      }, 0);
      setTotalAmount(total);
    } catch (error) {
      console.error('Error loading cart in checkout:', error);
      router.push('/cart');
    }
  }, [router]);
  
  // טיפול בשינויים בטופס
  const handleInputChange = (e) => {
    const { name, value } = e.target;
    setOrderDetails(prev => ({ ...prev, [name]: value }));
  };
  
  // שליחת הזמנה
  const submitOrder = async (e) => {
    e.preventDefault();
    
    if (!selectedPayment) {
      alert('יש לבחור אמצעי תשלום');
      return;
    }
    
    setIsSubmitting(true);
    
    try {
      // יצירת אובייקט ההזמנה
      const orderData = {
        customerName: orderDetails.fullName,
        customerPhone: orderDetails.phone,
        customerEmail: orderDetails.email,
        // עיבוד פריטי הסל
        items: cartItems.map(item => {
          // הוספת אובייקט ID אם לא קיים, כדי לעבור את הבדיקת תקינות
          return {
            // תמיד נשלח productId עם ערך ברירת מחדל אם לא קיים
            productId: item.id || "000000000000000000000000",
            name: item.name,
            price: item.price,
            quantity: item.quantity,
            customization: item.customDetails || null
          };
        }),
        total: totalAmount,
        paymentMethod: selectedPayment.id,
        notes: orderDetails.notes
      };
      
      console.log('Sending order data:', JSON.stringify(orderData));
      
      // שליחת הנתונים לשרת
      const response = await fetch('/api/orders', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(orderData),
      });
      
      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.message || `שגיאת שרת: ${response.status}`);
      }
      
      const result = await response.json();
      
      if (!result.success) {
        throw new Error(result.message || 'אירעה שגיאה בעת יצירת ההזמנה');
      }
      
      // נקה את העגלה
      localStorage.removeItem('cartItems');
      window.dispatchEvent(new Event('storage'));
      
      setIsComplete(true);
    } catch (error) {
      console.error('שגיאה ביצירת הזמנה:', error);
      alert('אירעה שגיאה בעת יצירת ההזמנה: ' + error.message);
    } finally {
      setIsSubmitting(false);
    }
  };
  
  if (isComplete) {
    return (
      <div className="container-custom py-12">
        <div className="text-center max-w-lg mx-auto bg-white p-8 rounded-lg shadow-md">
          <div className="mb-6 text-green-500">
            <svg className="h-16 w-16 mx-auto" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
            </svg>
          </div>
          <h1 className="text-2xl font-bold mb-4">ההזמנה התקבלה בהצלחה!</h1>
          <p className="mb-6">
            {selectedPayment?.id === 'cash' 
              ? 'תודה על הזמנתך! ניצור איתך קשר בהקדם לתיאום איסוף ותשלום.' 
              : 'תודה על הזמנתך! נא להעביר תשלום דרך ' + selectedPayment?.name + ' למספר ' + selectedPayment?.phoneNumber}
          </p>
          
          {selectedPayment?.id !== 'cash' && (
            <div className="bg-yellow-50 border border-yellow-200 p-4 rounded-lg mb-6 text-right">
              <p className="text-yellow-800 font-bold mb-1">שימי לב:</p>
              <p className="text-yellow-700">ההזמנה לא תתחיל להיות מוכנה עד שהתשלום יועבר. לאחר העברת התשלום, נא לשלוח הודעת וואטסאפ עם צילום מסך של ההעברה.</p>
            </div>
          )}
          
          <div className="flex justify-center">
            <Link href="/" className="btn-primary mx-2">
              חזרה לדף הבית
            </Link>
          </div>
        </div>
      </div>
    );
  }
  
  return (
    <div className="container-custom py-8">
      <div className="text-center mb-8">
        <h1 className="text-3xl font-semibold mb-2">השלמת הזמנה</h1>
        <p className="text-gray-600 max-w-2xl mx-auto">
          בחרי את אמצעי התשלום והשלימי את פרטי ההזמנה
        </p>
      </div>
      
      <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
        {/* טופס השלמת הזמנה */}
        <div className="lg:col-span-2">
          <form onSubmit={submitOrder} className="bg-white rounded-lg shadow-sm overflow-hidden">
            <div className="p-6 border-b border-gray-100">
              <h2 className="text-lg font-medium">פרטי הזמנה</h2>
            </div>
            
            <div className="p-6 space-y-6">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <label htmlFor="fullName" className="block text-sm font-medium mb-1">שם מלא</label>
                  <input
                    type="text"
                    id="fullName"
                    name="fullName"
                    required
                    value={orderDetails.fullName}
                    onChange={handleInputChange}
                    className="w-full p-2 border border-gray-300 rounded-md"
                  />
                </div>
                <div>
                  <label htmlFor="phone" className="block text-sm font-medium mb-1">טלפון</label>
                  <input
                    type="tel"
                    id="phone"
                    name="phone"
                    required
                    value={orderDetails.phone}
                    onChange={handleInputChange}
                    className="w-full p-2 border border-gray-300 rounded-md"
                  />
                </div>
              </div>
              
              <div>
                <label htmlFor="email" className="block text-sm font-medium mb-1">אימייל</label>
                <input
                  type="email"
                  id="email"
                  name="email"
                  required
                  value={orderDetails.email}
                  onChange={handleInputChange}
                  className="w-full p-2 border border-gray-300 rounded-md"
                />
              </div>
              
              <div>
                <label htmlFor="notes" className="block text-sm font-medium mb-1">הערות להזמנה</label>
                <textarea
                  id="notes"
                  name="notes"
                  rows={3}
                  value={orderDetails.notes}
                  onChange={handleInputChange}
                  className="w-full p-2 border border-gray-300 rounded-md"
                ></textarea>
              </div>
            </div>
            
            <div className="p-6 border-t border-b border-gray-100">
              <h2 className="text-lg font-medium mb-4">בחירת אמצעי תשלום</h2>
              <p className="text-red-600 mb-6 font-medium">שימי לב: בעת בחירת ביט או פייבוקס, ההזמנה לא תתחיל להיות מוכנה עד שהתשלום יועבר</p>
              
              <div className="grid grid-cols-1 gap-4">
                {paymentOptions.map(option => (
                  <div 
                    key={option.id}
                    onClick={() => setSelectedPayment(option)}
                    className={`p-4 border rounded-lg cursor-pointer transition-all ${
                      selectedPayment?.id === option.id 
                        ? 'border-primary bg-primary/5' 
                        : 'border-gray-200 hover:border-gray-300'
                    }`}
                  >
                    <div className="flex items-center">
                      <div className={`h-5 w-5 rounded-full border-2 flex items-center justify-center mr-3 ${
                        selectedPayment?.id === option.id 
                          ? 'border-primary' 
                          : 'border-gray-300'
                      }`}>
                        {selectedPayment?.id === option.id && (
                          <div className="h-2.5 w-2.5 rounded-full bg-primary"></div>
                        )}
                      </div>
                      <div>
                        <h3 className="font-medium">{option.name}</h3>
                        {option.phoneNumber && (
                          <p className="text-sm text-gray-600">יש להעביר תשלום למספר: {option.phoneNumber}</p>
                        )}
                        {option.id === 'cash' && (
                          <p className="text-sm text-gray-600">תשלום בעת האיסוף</p>
                        )}
                      </div>
                    </div>
                    
                    {selectedPayment?.id === option.id && option.id !== 'cash' && (
                      <div className="mt-4 bg-yellow-50 border border-yellow-100 p-3 rounded-md">
                        <p className="text-sm text-yellow-800">
                          לאחר ביצוע ההזמנה יש להעביר תשלום באמצעות {option.name} למספר {option.phoneNumber} ולשלוח הודעת וואטסאפ עם צילום מסך של ההעברה
                        </p>
                      </div>
                    )}
                  </div>
                ))}
              </div>
            </div>
            
            <div className="p-6 flex justify-between">
              <Link href="/cart" className="text-primary hover:underline flex items-center">
                <svg className="h-4 w-4 ml-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M15 19l-7-7 7-7" />
                </svg>
                חזרה לעגלת הקניות
              </Link>
              
              <button 
                type="submit"
                disabled={isSubmitting}
                className="btn-primary py-2 px-6"
              >
                {isSubmitting ? (
                  <span className="flex items-center">
                    <svg className="animate-spin -ml-1 mr-2 h-4 w-4 text-white" fill="none" viewBox="0 0 24 24">
                      <circle className="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" strokeWidth="4"></circle>
                      <path className="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                    </svg>
                    מבצע הזמנה...
                  </span>
                ) : (
                  'סיום והזמנה'
                )}
              </button>
            </div>
          </form>
        </div>
        
        {/* סיכום הזמנה */}
        <div className="lg:col-span-1">
          <div className="bg-white rounded-lg shadow-sm p-6 sticky top-24">
            <h2 className="text-lg font-medium mb-4">סיכום הזמנה</h2>
            
            <div className="divide-y divide-gray-100">
              {cartItems.map(item => (
                <div key={item.id} className="py-3 flex gap-3">
                  <div className="relative h-16 w-16 bg-gray-50 rounded overflow-hidden flex-shrink-0">
                    <Image
                      src={item.image || '/images/placeholder.jpg'}
                      alt={item.name}
                      fill
                      className="object-cover"
                    />
                  </div>
                  <div className="flex-grow">
                    <p className="font-medium">
                      {item.name}
                      {item.custom && (
                        <span className="inline-block mr-2 bg-primary/10 text-primary text-xs px-2 py-0.5 rounded-full">
                          מותאם אישית
                        </span>
                      )}
                    </p>
                    <div className="flex justify-between">
                      <p className="text-sm text-gray-600">כמות: {item.quantity}</p>
                      <p className="font-bold">{item.price * item.quantity} ₪</p>
                    </div>
                    {item.custom && item.customDetails && item.customDetails.selectedCharms && item.customDetails.selectedCharms.length > 0 && (
                      <p className="text-xs text-gray-500 mt-1">
                        עם {item.customDetails.selectedCharms.length} צ'ארמים
                      </p>
                    )}
                  </div>
                </div>
              ))}
            </div>
            
            <div className="border-t border-gray-100 mt-4 pt-4">
              <div className="flex justify-between mb-2">
                <span className="text-gray-600">סכום ביניים:</span>
                <span>{totalAmount} ₪</span>
              </div>
              <div className="flex justify-between mb-2">
                <span className="text-gray-600">משלוח:</span>
                <span className="text-green-600">איסוף עצמי - חינם</span>
              </div>
              <div className="pt-3 border-t border-gray-100">
                <div className="flex justify-between font-bold text-lg">
                  <span>סה"כ לתשלום:</span>
                  <span>{totalAmount} ₪</span>
                </div>
              </div>
            </div>
            
            <div className="mt-6 bg-yellow-50 border border-yellow-200 rounded-lg p-4">
              <p className="text-sm text-yellow-700">
                <span className="font-medium">שימי לב: </span>
                כל המוצרים זמינים לאיסוף עצמי בלבד. לאחר ביצוע ההזמנה ניצור איתך קשר לתיאום מועד איסוף.
              </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
} 